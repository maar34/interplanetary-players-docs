{"list":[{"title":"ButtonGroup#adjustForMidiSupport","link":"<a href=\"ButtonGroup.html#adjustForMidiSupport\">adjustForMidiSupport</a>","description":"<p>Adjust the dropdown for MIDI support before setting up icons and events.</p>"},{"title":"ButtonGroup#bindEvents","link":"<a href=\"ButtonGroup.html#bindEvents\">bindEvents</a>","description":"<p>Bind events to menu items and the close grid button.</p>"},{"title":"ButtonGroup#fetchAndSetSVG","link":"<a href=\"ButtonGroup.html#fetchAndSetSVG\">fetchAndSetSVG</a>","description":"<p>Fetch and set SVG content.</p>"},{"title":"ButtonGroup#handleInformationDropdown","link":"<a href=\"ButtonGroup.html#handleInformationDropdown\">handleInformationDropdown</a>","description":"<p>Handle information dropdown selection.</p>"},{"title":"ButtonGroup#handleInteractionDropdown","link":"<a href=\"ButtonGroup.html#handleInteractionDropdown\">handleInteractionDropdown</a>","description":"<p>Handle interaction dropdown selection.</p>"},{"title":"ButtonGroup#handleTransportDropdown","link":"<a href=\"ButtonGroup.html#handleTransportDropdown\">handleTransportDropdown</a>","description":"<p>Handle transport dropdown selection.</p>"},{"title":"ButtonGroup#hideGrid","link":"<a href=\"ButtonGroup.html#hideGrid\">hideGrid</a>","description":"<p>Hide the grid wrapper and collapse the menu.</p>"},{"title":"ButtonGroup#init","link":"<a href=\"ButtonGroup.html#init\">init</a>","description":"<p>Initialize the ButtonGroup by setting up SVGs and event bindings.</p>"},{"title":"ButtonGroup#loadDynamicSVGs","link":"<a href=\"ButtonGroup.html#loadDynamicSVGs\">loadDynamicSVGs</a>","description":"<p>Load dynamic SVGs for the main button and dropdown menu items.</p>"},{"title":"ButtonGroup#onSelectionChange","link":"<a href=\"ButtonGroup.html#onSelectionChange\">onSelectionChange</a>","description":"<p>Handle selection change from the dropdown menu.</p>"},{"title":"ButtonGroup#showGrid","link":"<a href=\"ButtonGroup.html#showGrid\">showGrid</a>","description":"<p>Show the grid wrapper and expand the collapsible menu.</p>"},{"title":"Constants.clearTrackData","link":"<a href=\"Constants.html#.clearTrackData\">clearTrackData</a>","description":"<p>Clears cached data for the specified trackId.</p>"},{"title":"Constants.getTrackData","link":"<a href=\"Constants.html#.getTrackData\">getTrackData</a>","description":"<p>Retrieves cached track data for the specified trackId.</p>"},{"title":"Constants.setTrackData","link":"<a href=\"Constants.html#.setTrackData\">setTrackData</a>","description":"<p>Sets and caches track data for the specified trackId.</p>"},{"title":"DataManager","link":"<a href=\"DataManager.html\">DataManager</a>","description":"<p>Creates an instance of DataManager.</p>"},{"title":"DataManager#clearPlaceholders","link":"<a href=\"DataManager.html#clearPlaceholders\">clearPlaceholders</a>","description":"<p>Clears all UI placeholders by setting their text content to empty strings.</p>"},{"title":"DataManager#fetchAndUpdateConfig","link":"<a href=\"DataManager.html#fetchAndUpdateConfig\">fetchAndUpdateConfig</a>","description":"<p>Fetches track data and updates the placeholder configuration.</p>"},{"title":"DataManager#fetchTrackData","link":"<a href=\"DataManager.html#fetchTrackData\">fetchTrackData</a>","description":"<p>Fetches track data from the server or retrieves it from the cache if available.</p>"},{"title":"DataManager#populatePlaceholders","link":"<a href=\"DataManager.html#populatePlaceholders\">populatePlaceholders</a>","description":"<p>Populates the UI placeholders with the configured data.</p>"},{"title":"DataManager#updatePlaceholderConfig","link":"<a href=\"DataManager.html#updatePlaceholderConfig\">updatePlaceholderConfig</a>","description":"<p>Updates the configuration for UI placeholders using the retrieved track data.</p>"},{"title":"MIDI","link":"<a href=\"MIDI.html\">MIDI</a>"},{"title":"MIDI_SUPPORTED","link":"<a href=\"global.html#MIDI_SUPPORTED\">MIDI_SUPPORTED</a>","description":"<p><strong>Global MIDI Support Flag</strong>\nDetermines if the browser supports the Web MIDI API.\nThis flag can be used across the application to conditionally execute MIDI-related code.</p>"},{"title":"ParameterManager#addParameter","link":"<a href=\"ParameterManager.html#addParameter\">addParameter</a>","description":"<p>Adds or updates a parameter with the given configuration.</p>"},{"title":"ParameterManager#denormalize","link":"<a href=\"ParameterManager.html#denormalize\">denormalize</a>","description":"<p>Denormalizes a normalized value [0, 1] to the raw range.</p>"},{"title":"ParameterManager#emitRangeUpdate","link":"<a href=\"ParameterManager.html#emitRangeUpdate\">emitRangeUpdate</a>","description":"<p>Emits a range update event for a parameter.</p>"},{"title":"ParameterManager#emitScaleUpdate","link":"<a href=\"ParameterManager.html#emitScaleUpdate\">emitScaleUpdate</a>","description":"<p>Emits a scale update event for a parameter.</p>"},{"title":"ParameterManager#emitValueUpdate","link":"<a href=\"ParameterManager.html#emitValueUpdate\">emitValueUpdate</a>","description":"<p>Emits a value update event for a parameter.</p>"},{"title":"ParameterManager#getNormalizedValue","link":"<a href=\"ParameterManager.html#getNormalizedValue\">getNormalizedValue</a>","description":"<p>Retrieves the current normalized value of a parameter.</p>"},{"title":"ParameterManager#getParameter","link":"<a href=\"ParameterManager.html#getParameter\">getParameter</a>","description":"<p>Gets the details of a specific parameter by name.\nUseful for accessing and debugging individual parameters.</p>"},{"title":"ParameterManager#getRawValue","link":"<a href=\"ParameterManager.html#getRawValue\">getRawValue</a>","description":"<p>Retrieves the current raw value of a parameter.</p>"},{"title":"ParameterManager#listParameters","link":"<a href=\"ParameterManager.html#listParameters\">listParameters</a>","description":"<p>Lists all registered parameters with their current values and settings.\nUseful for debugging.</p>"},{"title":"ParameterManager#normalize","link":"<a href=\"ParameterManager.html#normalize\">normalize</a>","description":"<p>Normalizes a raw value to a [0, 1] range based on min and max.</p>"},{"title":"ParameterManager#setControllerValue","link":"<a href=\"ParameterManager.html#setControllerValue\">setControllerValue</a>","description":"<p>Sets the value from a controller by applying the inputTransform.</p>"},{"title":"ParameterManager#setNormalizedValue","link":"<a href=\"ParameterManager.html#setNormalizedValue\">setNormalizedValue</a>","description":"<p>Updates the normalized value of a parameter and notifies subscribers.\nConverts normalized to raw before updating.</p>"},{"title":"ParameterManager#setRawValue","link":"<a href=\"ParameterManager.html#setRawValue\">setRawValue</a>","description":"<p>Updates the raw value of a parameter and notifies subscribers.\nHandles bidirectional updates if enabled and ensures priority rules.</p>"},{"title":"ParameterManager#setToMiddle","link":"<a href=\"ParameterManager.html#setToMiddle\">setToMiddle</a>","description":"<p>Sets the parameter to the middle (normalized value of 0.5) directly,\nwithout any priority or simultaneous logic.</p>"},{"title":"ParameterManager#subscribe","link":"<a href=\"ParameterManager.html#subscribe\">subscribe</a>","description":"<p>Subscribes a controller to a parameter with a specified priority.</p>"},{"title":"ParameterManager#unsubscribe","link":"<a href=\"ParameterManager.html#unsubscribe\">unsubscribe</a>","description":"<p>Unsubscribes a controller from a parameter.</p>"},{"title":"ParameterManager.getInstance","link":"<a href=\"ParameterManager.html#.getInstance\">getInstance</a>","description":"<p>Provides access to the Singleton instance.</p>"},{"title":"_setValue","link":"<a href=\"global.html#_setValue\">_setValue</a>","description":"<p>Sets the internal value without triggering events.</p>"},{"title":"activateRadio","link":"<a href=\"global.html#activateRadio\">activateRadio</a>","description":"<p>Activates the radio switch, ensuring only this switch is active in its group.</p>"},{"title":"addEventListeners","link":"<a href=\"global.html#addEventListeners\">addEventListeners</a>","description":"<p>Adds necessary event listeners to the slider element.</p>"},{"title":"animate","link":"<a href=\"global.html#animate\">animate</a>","description":"<p>Animation loop for the application.\nUpdates controls and renders the scene.</p>"},{"title":"applyColorsFromTrackData","link":"<a href=\"global.html#applyColorsFromTrackData\">applyColorsFromTrackData</a>","description":"<p>Apply colors to the document from track data.</p>"},{"title":"cubic.forward","link":"<a href=\"cubic.html#.forward\">forward</a>","description":"<p>Cubic transformation.\nProvides more aggressive scaling compared to quadratic.</p>"},{"title":"cycleState","link":"<a href=\"global.html#cycleState\">cycleState</a>","description":"<p>Cycles through states (for sequential type).\nAccepts an optional delta to increment/decrement.</p>"},{"title":"drawKnob","link":"<a href=\"global.html#drawKnob\">drawKnob</a>","description":"<p>Draws the knob on the canvas based on the provided ratio.</p>"},{"title":"drawModeIndicator","link":"<a href=\"global.html#drawModeIndicator\">drawModeIndicator</a>","description":"<p>Draws additional indicators based on the current type and state.</p>"},{"title":"drawSlider","link":"<a href=\"global.html#drawSlider\">drawSlider</a>","description":"<p>Draws the slider on the canvas based on the provided ratio.</p>"},{"title":"drawSwitch","link":"<a href=\"global.html#drawSwitch\">drawSwitch</a>","description":"<p>Draws the switch on the canvas based on its type and state.</p>"},{"title":"exponential.forward","link":"<a href=\"exponential.html#.forward\">forward</a>","description":"<p>Exponential transformation.\nAccelerates scaling, useful for parameters requiring rapid increase.</p>"},{"title":"forward","link":"<a href=\"global.html#forward\">forward</a>","description":"<p>Custom logarithmic transformation with adjustable dB range.</p>"},{"title":"getPriority","link":"<a href=\"global.html#getPriority\">getPriority</a>","description":"<p>Retrieves the priority for a given controller type.\nDefaults to DEFAULT_PRIORITY if the type is not in the PRIORITY_MAP.</p>"},{"title":"handleParamChange","link":"<a href=\"global.html#handleParamChange\">handleParamChange</a>","description":"<p>Handles changes from the linked parameter.</p>"},{"title":"hidetip","link":"<a href=\"global.html#hidetip\">hidetip</a>","description":"<p>Hides the tooltip after a specified delay.</p>"},{"title":"initializeApp","link":"<a href=\"global.html#initializeApp\">initializeApp</a>","description":"<p>Initializes the application.\nFetches track data, sets up the scene, and configures interactions.</p>"},{"title":"initializeAttributes","link":"<a href=\"global.html#initializeAttributes\">initializeAttributes</a>","description":"<p>Initializes attributes with proper parsing and defaults.</p>"},{"title":"initializeRootParams","link":"<a href=\"global.html#initializeRootParams\">initializeRootParams</a>","description":"<p>Initializes root parameters for the ParameterManager.\nDynamically maps parameters to the manager based on track data.</p>"},{"title":"inverse","link":"<a href=\"global.html#inverse\">inverse</a>","description":"<p>Inverse of the custom logarithmic transformation.</p>"},{"title":"inverseSine.forward","link":"<a href=\"inverseSine.html#.forward\">forward</a>","description":"<p>Inverse Sine transformation.\nApplies the inverse of the sine transformation.</p>"},{"title":"isActive","link":"<a href=\"global.html#isActive\">isActive</a>","description":"<p>Determines if the switch is active based on the type and state.</p>"},{"title":"keydown","link":"<a href=\"global.html#keydown\">keydown</a>","description":"<p>Handles keydown events for accessibility.</p>"},{"title":"linear","link":"<a href=\"global.html#linear\">linear</a>","description":"<p>Transformation functions for non-linear parameter mappings.\nEach transformation includes an inputTransform and an outputTransform.</p>\n<p>Usage:\nImport the required transformation and apply it when adding parameters.</p>\n<p>Example:\nimport { logarithmic } from './Transformations';</p>\n<p>ParameterManagerInstance.addParameter(\n'volume',\n0.5, // Initial raw value\n0,   // Min raw value\n1,   // Max raw value\ntrue, // isBidirectional\nlogarithmic.inverse, // inputTransform\nlogarithmic.forward // outputTransform\n);</p>"},{"title":"linear.forward","link":"<a href=\"global.html#linear#.forward\">forward</a>","description":"<p>Linear transformation (identity).\nSuitable for parameters where linear scaling is appropriate.</p>"},{"title":"loadAndDisplayModel","link":"<a href=\"global.html#loadAndDisplayModel\">loadAndDisplayModel</a>","description":"<p>Loads and displays the GLB model using the interplanetaryPlayer data.</p>"},{"title":"loadGLBModelWithRetry","link":"<a href=\"global.html#loadGLBModelWithRetry\">loadGLBModelWithRetry</a>","description":"<p>Retry loading a 3D model from a URL.</p>"},{"title":"logarithmic.forward","link":"<a href=\"logarithmic.html#.forward\">forward</a>","description":"<p>Logarithmic transformation.\nConverts normalized [0,1] to dB scale suitable for audio volume.\nHandles edge cases by clamping input to avoid log(0).</p>"},{"title":"module:MIDIControllers","link":"<a href=\"module-MIDIControllers.html\">MIDIControllers</a>","description":"<p>Handles all MIDI controller-related logic.</p>"},{"title":"module:MIDIControllers~MIDIController#activateMIDI","link":"<a href=\"module-MIDIControllers-MIDIController.html#activateMIDI\">activateMIDI</a>","description":"<p>Activates MIDI mode with custom modal messaging.\nShows the modal only on the first successful activation.</p>"},{"title":"module:MIDIControllers~MIDIController#clearMidiMapping","link":"<a href=\"module-MIDIControllers-MIDIController.html#clearMidiMapping\">clearMidiMapping</a>","description":"<p>Clears the MIDI mapping for a specific parameter or widget.</p>"},{"title":"module:MIDIControllers~MIDIController#createOverlays","link":"<a href=\"module-MIDIControllers-MIDIController.html#createOverlays\">createOverlays</a>","description":"<p>Creates overlays over automatable elements during MIDI Learn mode.</p>"},{"title":"module:MIDIControllers~MIDIController#enableInputs","link":"<a href=\"module-MIDIControllers-MIDIController.html#enableInputs\">enableInputs</a>","description":"<p>Enables MIDI inputs and binds the message handlers.</p>"},{"title":"module:MIDIControllers~MIDIController#enableMidiLearn","link":"<a href=\"module-MIDIControllers-MIDIController.html#enableMidiLearn\">enableMidiLearn</a>","description":"<p>Enables MIDI Learn mode by creating overlays over automatable elements.</p>"},{"title":"module:MIDIControllers~MIDIController#exitMidiLearnMode","link":"<a href=\"module-MIDIControllers-MIDIController.html#exitMidiLearnMode\">exitMidiLearnMode</a>","description":"<p>Exits MIDI Learn mode by removing overlays and hiding the exit button.</p>"},{"title":"module:MIDIControllers~MIDIController#fetchAndSetSVG","link":"<a href=\"module-MIDIControllers-MIDIController.html#fetchAndSetSVG\">fetchAndSetSVG</a>","description":"<p>Fetch and set SVG content.</p>"},{"title":"module:MIDIControllers~MIDIController#handleContextMenuClose","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleContextMenuClose\">handleContextMenuClose</a>","description":"<p>Handles the &quot;Close&quot; action from the context menu.</p>"},{"title":"module:MIDIControllers~MIDIController#handleContextMenuDelete","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleContextMenuDelete\">handleContextMenuDelete</a>","description":"<p>Handles the &quot;Delete&quot; action from the context menu.</p>"},{"title":"module:MIDIControllers~MIDIController#handleContextMenuLearn","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleContextMenuLearn\">handleContextMenuLearn</a>","description":"<p>Handles the &quot;Learn&quot; action from the context menu.\nInitiates MIDI Learn mode for the selected parameter or widget.</p>"},{"title":"module:MIDIControllers~MIDIController#handleEscKey","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleEscKey\">handleEscKey</a>","description":"<p>Handles the Esc key press to exit MIDI Learn mode.</p>"},{"title":"module:MIDIControllers~MIDIController#handleExitButtonClick","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleExitButtonClick\">handleExitButtonClick</a>","description":"<p>Handles the &quot;Cancel MIDI Learn&quot; button click.</p>"},{"title":"module:MIDIControllers~MIDIController#handleMidiMessage","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleMidiMessage\">handleMidiMessage</a>","description":"<p>Handles incoming MIDI messages and dispatches them to widgets or parameters.\nIf in MIDI Learn mode, maps the incoming CC to the selected parameter or widget.</p>"},{"title":"module:MIDIControllers~MIDIController#handleStateChange","link":"<a href=\"module-MIDIControllers-MIDIController.html#handleStateChange\">handleStateChange</a>","description":"<p>Handles state changes for MIDI devices (e.g., connected/disconnected).</p>"},{"title":"module:MIDIControllers~MIDIController#highlightParameter","link":"<a href=\"module-MIDIControllers-MIDIController.html#highlightParameter\">highlightParameter</a>","description":"<p>Highlights a specific parameter in the UI to indicate it's being mapped.</p>"},{"title":"module:MIDIControllers~MIDIController#highlightWidget","link":"<a href=\"module-MIDIControllers-MIDIController.html#highlightWidget\">highlightWidget</a>","description":"<p>Highlights a specific widget in the UI to indicate it's being mapped.</p>"},{"title":"module:MIDIControllers~MIDIController#openContextMenu","link":"<a href=\"module-MIDIControllers-MIDIController.html#openContextMenu\">openContextMenu</a>","description":"<p>Opens the MIDI Context Menu for the specified widget or parameter at the event's location.</p>"},{"title":"module:MIDIControllers~MIDIController#registerWidget","link":"<a href=\"module-MIDIControllers-MIDIController.html#registerWidget\">registerWidget</a>","description":"<p>Registers a widget for MIDI control.</p>"},{"title":"module:MIDIControllers~MIDIController#removeOverlays","link":"<a href=\"module-MIDIControllers-MIDIController.html#removeOverlays\">removeOverlays</a>","description":"<p>Removes overlays created during MIDI Learn mode.</p>"},{"title":"module:MIDIControllers~MIDIController#requestMidiAccess","link":"<a href=\"module-MIDIControllers-MIDIController.html#requestMidiAccess\">requestMidiAccess</a>","description":"<p>Requests MIDI access and initializes inputs with better iteration and state handling.</p>"},{"title":"module:MIDIControllers~MIDIController#setMidiWidgetMapping","link":"<a href=\"module-MIDIControllers-MIDIController.html#setMidiWidgetMapping\">setMidiWidgetMapping</a>","description":"<p>Sets a MIDI mapping for a widget.</p>"},{"title":"module:MIDIControllers~MIDIController#setupDropdownEventListeners","link":"<a href=\"module-MIDIControllers-MIDIController.html#setupDropdownEventListeners\">setupDropdownEventListeners</a>","description":"<p>Sets up event listeners for the context menu options.</p>"},{"title":"module:MIDIControllers~MIDIController#startMidiLearnForWidget","link":"<a href=\"module-MIDIControllers-MIDIController.html#startMidiLearnForWidget\">startMidiLearnForWidget</a>","description":"<p>Initiates MIDI learning mode for a specific widget.</p>"},{"title":"module:MIDIControllers~MIDIController#triggerWebAudioSwitch","link":"<a href=\"module-MIDIControllers-MIDIController.html#triggerWebAudioSwitch\">triggerWebAudioSwitch</a>","description":"<p>Triggers WebAudioSwitch actions or invokes dropdown item actions.</p>"},{"title":"module:MIDIControllers~MIDIController#unhighlightParameter","link":"<a href=\"module-MIDIControllers-MIDIController.html#unhighlightParameter\">unhighlightParameter</a>","description":"<p>Removes the highlight from a specific parameter in the UI.</p>"},{"title":"module:MIDIControllers~MIDIController#unhighlightWidget","link":"<a href=\"module-MIDIControllers-MIDIController.html#unhighlightWidget\">unhighlightWidget</a>","description":"<p>Removes the highlight from a specific widget in the UI.</p>"},{"title":"module:MIDIControllers~MIDIController#updateParameter","link":"<a href=\"module-MIDIControllers-MIDIController.html#updateParameter\">updateParameter</a>","description":"<p>Updates a parameter based on incoming MIDI data.</p>"},{"title":"module:MIDIControllers~MIDIController#updateWebAudioWidget","link":"<a href=\"module-MIDIControllers-MIDIController.html#updateWebAudioWidget\">updateWebAudioWidget</a>","description":"<p>Updates standard widgets like sliders.</p>"},{"title":"onParameterChanged","link":"<a href=\"global.html#onParameterChanged\">onParameterChanged</a>","description":"<p>Handles parameter updates from ParameterManager.</p>"},{"title":"onParameterChanged","link":"<a href=\"global.html#onParameterChanged\">onParameterChanged</a>","description":"<p>Handles parameter updates from ParameterManager.</p>"},{"title":"onParameterChanged","link":"<a href=\"global.html#onParameterChanged\">onParameterChanged</a>","description":"<p>Handles parameter updates from ParameterManager.</p>"},{"title":"piecewiseLinear","link":"<a href=\"global.html#piecewiseLinear\">piecewiseLinear</a>","description":"<p>Piecewise Linear Transformation.\nAllows defining multiple linear segments for more complex mappings.</p>\n<p>Example:\nconst piecewise = piecewiseLinear([\n{ x: 0, y: 0 },\n{ x: 0.5, y: 0.3 },\n{ x: 1, y: 1 },\n]);</p>"},{"title":"pointerdown","link":"<a href=\"global.html#pointerdown\">pointerdown</a>","description":"<p>Handles pointer down events to initiate dragging.</p>"},{"title":"pointermove","link":"<a href=\"global.html#pointermove\">pointermove</a>","description":"<p>Handles pointer move events to update the slider value.</p>"},{"title":"pointerup","link":"<a href=\"global.html#pointerup\">pointerup</a>","description":"<p>Handles pointer up events to end dragging.</p>"},{"title":"processColors","link":"<a href=\"global.html#processColors\">processColors</a>","description":"<p>Processes color attributes, allowing external customization.</p>"},{"title":"redraw","link":"<a href=\"global.html#redraw\">redraw</a>","description":"<p>Redraws the slider based on the current value and settings.</p>"},{"title":"registerMenuItemsWithMIDIController","link":"<a href=\"global.html#registerMenuItemsWithMIDIController\">registerMenuItemsWithMIDIController</a>","description":"<p>Registers all dropdown items in the initialized ButtonGroups with MIDIController.</p>"},{"title":"removeEventListeners","link":"<a href=\"global.html#removeEventListeners\">removeEventListeners</a>","description":"<p>Removes event listeners from the slider element.</p>"},{"title":"setValue","link":"<a href=\"global.html#setValue\">setValue</a>","description":"<p>Sets the value and optionally notifies the ParameterManager and dispatches events.</p>"},{"title":"setValue","link":"<a href=\"global.html#setValue\">setValue</a>","description":"<p>Sets the value and optionally fires events.</p>"},{"title":"setValue","link":"<a href=\"global.html#setValue\">setValue</a>","description":"<p>Sets the value and optionally notifies the ParameterManager and dispatches events.</p>"},{"title":"setupCanvas","link":"<a href=\"global.html#setupCanvas\">setupCanvas</a>","description":"<p>Sets up the canvas dimensions and scaling.</p>"},{"title":"setupCollapseMenuAlignment","link":"<a href=\"global.html#setupCollapseMenuAlignment\">setupCollapseMenuAlignment</a>","description":"<p>Sets up alignment for the information collapse menu.\nAdjusts the menu's position based on window size and button position.\nAttaches relevant event listeners for alignment updates.</p>"},{"title":"setupInteractions","link":"<a href=\"global.html#setupInteractions\">setupInteractions</a>","description":"<p>Setup interactions for dynamic placeholder updates.</p>"},{"title":"setupLabel","link":"<a href=\"global.html#setupLabel\">setupLabel</a>","description":"<p>Sets up the label. Customize this method based on your labeling needs.</p>"},{"title":"setupResizeObserver","link":"<a href=\"global.html#setupResizeObserver\">setupResizeObserver</a>","description":"<p>Sets up ResizeObserver to handle responsiveness.</p>"},{"title":"showParameterSelectionModal","link":"<a href=\"global.html#showParameterSelectionModal\">showParameterSelectionModal</a>","description":"<p>Displays a Parameter Selection Modal with a list of available parameters.</p>"},{"title":"showUniversalModal","link":"<a href=\"global.html#showUniversalModal\">showUniversalModal</a>","description":"<p>Displays a universal modal using Bootstrap and returns a promise that resolves when the modal is closed.</p>"},{"title":"showtip","link":"<a href=\"global.html#showtip\">showtip</a>","description":"<p>Shows the tooltip after a specified delay.</p>"},{"title":"sine.forward","link":"<a href=\"sine.html#.forward\">forward</a>","description":"<p>Sine transformation.\nCreates smooth oscillations, useful for parameters modulated by sine waves.</p>"},{"title":"squareRoot.forward","link":"<a href=\"squareRoot.html#.forward\">forward</a>","description":"<p>Square root transformation.\nDecelerates scaling, useful for parameters requiring gentle increase.</p>"},{"title":"src/DataManager.js","link":"<a href=\"global.html#src/DataManager.js\">src/DataManager.js</a>","description":"<p>Manages data fetching, caching, and placeholder configuration for track information.</p>"},{"title":"src/Main.js","link":"<a href=\"global.html#src/Main.js\">src/Main.js</a>","description":"<p>Entry point for initializing the Interplanetary Players application.\nHandles scene setup, parameter management, interactions, and rendering.</p>"},{"title":"toggleState","link":"<a href=\"global.html#toggleState\">toggleState</a>","description":"<p>Toggles the switch state (for toggle type).</p>"},{"title":"triggerKick","link":"<a href=\"global.html#triggerKick\">triggerKick</a>","description":"<p>Triggers a kick (momentary press).</p>"},{"title":"updateKnobsFromTrackData","link":"<a href=\"global.html#updateKnobsFromTrackData\">updateKnobsFromTrackData</a>","description":"<p>Dynamically create and update knobs based on track data.</p>"},{"title":"updateLinkedParam","link":"<a href=\"global.html#updateLinkedParam\">updateLinkedParam</a>","description":"<p>Updates the linked parameter when the slider value changes.</p>"},{"title":"updateTooltip","link":"<a href=\"global.html#updateTooltip\">updateTooltip</a>","description":"<p>Updates the tooltip with the current value.</p>"},{"title":"updateValueFromPointer","link":"<a href=\"global.html#updateValueFromPointer\">updateValueFromPointer</a>","description":"<p>Updates the slider value based on absolute pointer position.</p>"},{"title":"updateValueFromPointerRel","link":"<a href=\"global.html#updateValueFromPointerRel\">updateValueFromPointerRel</a>","description":"<p>Updates the slider value based on relative pointer movement.</p>"},{"title":"validateValue","link":"<a href=\"global.html#validateValue\">validateValue</a>","description":"<p>Validates the user-provided value against min and max constraints.\nIf the value exceeds the limits, it will be clamped.</p>"},{"title":"wheel","link":"<a href=\"global.html#wheel\">wheel</a>","description":"<p>Handles wheel events for adjusting the slider value.</p>"}]}